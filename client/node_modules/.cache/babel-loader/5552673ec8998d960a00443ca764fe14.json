{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Keerthan shetty\\\\OneDrive\\\\Desktop\\\\Mite events\\\\client\\\\src\\\\scenes\\\\loginPage\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Box, Button, TextField, useMediaQuery, Typography, useTheme } from \"@mui/material\";\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setLogin } from \"state\";\nimport DropZone from \"react-dropzone\";\nimport FlexBetween from \"components/FlexBetween\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst registerSchema = yup.object().shape({\n  usn: yup.string().required(\"required\"),\n  firstName: yup.string().required(\"required\"),\n  lastName: yup.string().required(\"required\"),\n  branch: yup.string().required(\"required\"),\n  sem: yup.number().required(\"required\"),\n  email: yup.string().email(\"invalid email\").required(\"required\"),\n  password: yup.string().required(\"required\"),\n  phoneNumber: yup.string().required(\"required\"),\n  gender: yup.string().required(\"required\"),\n  picture: yup.string().required(\"required\")\n});\nconst loginSchema = yup.object().shape({\n  email: yup.string().email(\"invalid email\").required(\"required\"),\n  password: yup.string().required(\"required\")\n});\nconst initialValuesRegister = {\n  usn: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  branch: \"\",\n  sem: \"\",\n  email: \"\",\n  password: \"\",\n  phoneNumber: \"\",\n  gender: \"\",\n  picture: \"\"\n};\nconst initialValuesLogin = {\n  email: \"\",\n  password: \"\"\n};\n\nconst Form = () => {\n  _s();\n\n  const [pageType, setPageType] = useState(\"login\");\n  const {\n    palette\n  } = useTheme();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isNonMobile = useMediaQuery(\"(min-width : 600px)\");\n  const isLogin = pageType === \"login\";\n  const isRegister = pageType === \"register\";\n\n  const register = async (values, onSubmitProps) => {\n    //All the data sent through the form is present in values but since we have image separately we cannot directly use it .\n    //This allows us to send form info with image.\n    const formData = new FormData();\n\n    for (let value in values) {\n      formData.append(value, values[value]);\n    }\n\n    formData.append('picturePath', values.picture.name);\n    const savedUserResponse = await fetch(\"http://localhost:3001/auth/register\", {\n      method: 'POST',\n      body: formData\n    });\n    const savedUser = await savedUserResponse.json();\n    onSubmitProps.resetForm();\n\n    if (savedUser) {\n      setPageType(\"login\");\n    }\n  };\n\n  const login = async (values, onSubmitProps) => {\n    const loggedInResponse = await fetch(\"http://localhost:3001/auth/login\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(values)\n    });\n    const loggedIn = await loggedInResponse.json();\n    onSubmitProps.resetForm();\n\n    if (loggedIn) {\n      dispatch(setLogin({\n        user: loggedIn.user,\n        token: loggedIn.token\n      }));\n      navigate(\"/home\");\n    }\n  };\n\n  const handleFormSubmit = async (values, onSubmitProps) => {\n    if (isLogin) await login(values, onSubmitProps);\n    if (isRegister) await register(values, onSubmitProps);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    onSubmit: handleFormSubmit,\n    initialValues: isLogin ? initialValuesLogin : initialValuesRegister,\n    validationSchema: isLogin ? loginSchema : registerSchema,\n    children: _ref => {\n      let {\n        values,\n        errors,\n        touched,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        setFieldValue,\n        resetForm\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"grid\",\n          gap: \"30px\",\n          gridTemplateColumns: \"repeat(4,minmax(0,1fr))\",\n          sx: {\n            \"& > div\": {\n              gridColumn: isNonMobile ? undefined : \"span 4\"\n            }\n          },\n          children: [isRegister && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"USN\",\n              onBlue: handleBlur,\n              onChange: handleChange,\n              value: values.usn,\n              name: \"usn\",\n              error: Boolean(touched.usn) && Boolean(errors.usn),\n              helperText: touched.usn && errors.usn,\n              sx: {\n                gridColumn: \"span 4\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"First Name\",\n              onBlue: handleBlur,\n              onChange: handleChange,\n              value: values.firstName,\n              name: \"firstName\",\n              error: Boolean(touched.firstName) && Boolean(errors.firstName),\n              helperText: touched.firstName && errors.firstName,\n              sx: {\n                gridColumn: \"span 2\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Last Name\",\n              onBlue: handleBlur,\n              onChange: handleChange,\n              value: values.lastName,\n              name: \"lastName\",\n              error: Boolean(touched.lastName) && Boolean(errors.lastName),\n              helperText: touched.lastName && errors.lastName,\n              sx: {\n                gridColumn: \"span 2\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Branch\",\n              onBlue: handleBlur,\n              onChange: handleChange,\n              value: values.branch,\n              name: \"branch\",\n              error: Boolean(touched.branch) && Boolean(errors.branch),\n              helperText: touched.branch && errors.branch,\n              sx: {\n                gridColumn: \"span 2\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Sem\",\n              onBlue: handleBlur,\n              onChange: handleChange,\n              value: values.sem,\n              name: \"sem\",\n              error: Boolean(touched.sem) && Boolean(errors.sem),\n              helperText: touched.sem && errors.sem,\n              sx: {\n                gridColumn: \"span 2\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Phone Number\",\n              onBlue: handleBlur,\n              onChange: handleChange,\n              value: values.phoneNumber,\n              name: \"phoneNumber\",\n              error: Boolean(touched.phoneNumber) && Boolean(errors.phoneNumber),\n              helperText: touched.phoneNumber && errors.phoneNumber,\n              sx: {\n                gridColumn: \"span 2\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Gender\",\n              onBlue: handleBlur,\n              onChange: handleChange,\n              value: values.gender,\n              name: \"gender\",\n              error: Boolean(touched.gender) && Boolean(errors.gender),\n              helperText: touched.gender && errors.gender,\n              sx: {\n                gridColumn: \"span 2\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              gridColumn: \"span 4\",\n              border: `1px solid ${palette.neutral.medium}`,\n              borderRadius: \"5px\",\n              p: \"1rem\",\n              children: /*#__PURE__*/_jsxDEV(DropZone, {\n                acceptedFiles: \".jpg,.jpeg,.png\",\n                multiple: false,\n                onDrop: acceptedFiles => setFieldValue(\"picture\", acceptedFiles[0]),\n                children: _ref2 => {\n                  let {\n                    getRootProps,\n                    getInputProps\n                  } = _ref2;\n                  return /*#__PURE__*/_jsxDEV(Box, { ...getRootProps(),\n                    border: `2px dashed ${palette.primary.main}`,\n                    p: \"1rem\",\n                    sx: {\n                      \"&:hover\": {\n                        cursor: \"pointer\"\n                      }\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 25\n                    }, this), !values.picture ? /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Add Picture Here\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(FlexBetween, {\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        children: values.picture.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(EditOutlinedIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 23\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            onBlue: handleBlur,\n            onChange: handleChange,\n            value: values.email,\n            name: \"email\",\n            error: Boolean(touched.email) && Boolean(errors.email),\n            helperText: touched.email && errors.email,\n            sx: {\n              gridColumn: \"span 4\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            type: \"password\",\n            onBlue: handleBlur,\n            onChange: handleChange,\n            value: values.password,\n            name: \"password\",\n            error: Boolean(touched.password) && Boolean(errors.email),\n            helperText: touched.password && errors.password,\n            sx: {\n              gridColumn: \"span 4\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            type: \"submit\",\n            sx: {\n              m: \"2rem 0\",\n              p: \"1rem\",\n              backgroundColor: palette.primary.main,\n              color: palette.background.alt,\n              \"&:hover\": {\n                color: palette.primary.main\n              }\n            },\n            children: isLogin ? \"LOGIN\" : \"REGISTER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            onClick: () => {\n              setPageType(isLogin ? \"register\" : \"login\");\n              resetForm();\n            },\n            sx: {\n              textDecoration: \"underline\",\n              color: palette.primary.main,\n              \"&:hover\": {\n                cursor: \"pointer\",\n                color: palette.primary.light\n              }\n            },\n            children: isLogin ? \"Don't have an account? Sign up here.\" : \"Already have an account? Login here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"8DIOG0TZdtriTk986WtN4O8mFiw=\", false, function () {\n  return [useTheme, useDispatch, useNavigate, useMediaQuery];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","Box","Button","TextField","useMediaQuery","Typography","useTheme","EditOutlinedIcon","Formik","yup","useNavigate","useDispatch","setLogin","DropZone","FlexBetween","registerSchema","object","shape","usn","string","required","firstName","lastName","branch","sem","number","email","password","phoneNumber","gender","picture","loginSchema","initialValuesRegister","initialValuesLogin","Form","pageType","setPageType","palette","dispatch","navigate","isNonMobile","isLogin","isRegister","register","values","onSubmitProps","formData","FormData","value","append","name","savedUserResponse","fetch","method","body","savedUser","json","resetForm","login","loggedInResponse","headers","JSON","stringify","loggedIn","user","token","handleFormSubmit","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","gridColumn","undefined","Boolean","neutral","medium","acceptedFiles","getRootProps","getInputProps","primary","main","cursor","m","p","backgroundColor","color","background","alt","textDecoration","light"],"sources":["C:/Users/Keerthan shetty/OneDrive/Desktop/Mite events/client/src/scenes/loginPage/Form.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  useMediaQuery,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLogin } from \"state\";\r\nimport DropZone from \"react-dropzone\";\r\nimport FlexBetween from \"components/FlexBetween\";\r\n\r\nconst registerSchema = yup.object().shape({\r\n  usn: yup.string().required(\"required\"),\r\n  firstName: yup.string().required(\"required\"),\r\n  lastName: yup.string().required(\"required\"),\r\n  branch: yup.string().required(\"required\"),\r\n  sem: yup.number().required(\"required\"),\r\n  email: yup.string().email(\"invalid email\").required(\"required\"),\r\n  password: yup.string().required(\"required\"),\r\n  phoneNumber: yup.string().required(\"required\"),\r\n  gender: yup.string().required(\"required\"),\r\n  picture: yup.string().required(\"required\"),\r\n});\r\n\r\nconst loginSchema = yup.object().shape({\r\n  email: yup.string().email(\"invalid email\").required(\"required\"),\r\n  password: yup.string().required(\"required\"),\r\n});\r\n\r\nconst initialValuesRegister = {\r\n  usn : \"\",\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  branch:\"\",\r\n  sem:\"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  phoneNumber: \"\",\r\n  gender: \"\",\r\n  picture: \"\",\r\n};\r\n\r\nconst initialValuesLogin = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst Form = () => {\r\n  const [pageType, setPageType] = useState(\"login\");\r\n  const { palette } = useTheme();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const isNonMobile = useMediaQuery(\"(min-width : 600px)\");\r\n  const isLogin = pageType === \"login\";\r\n  const isRegister = pageType === \"register\";\r\n\r\n  const register = async (values, onSubmitProps)=>{\r\n    //All the data sent through the form is present in values but since we have image separately we cannot directly use it .\r\n    //This allows us to send form info with image.\r\n    const formData = new FormData();\r\n    for(let value in values) {\r\n        formData.append(value,values[value]);\r\n    }\r\n    formData.append('picturePath',values.picture.name);\r\n\r\n    const savedUserResponse = await fetch(\r\n        \"http://localhost:3001/auth/register\",\r\n        {\r\n            method : 'POST',\r\n            body : formData,\r\n        }\r\n    );\r\n    const savedUser = await savedUserResponse.json();\r\n    onSubmitProps.resetForm();\r\n\r\n    if (savedUser) {\r\n        setPageType(\"login\");\r\n    }\r\n  };\r\n\r\n  const login= async ( values, onSubmitProps ) => {\r\n    const loggedInResponse = await fetch(\r\n        \"http://localhost:3001/auth/login\",\r\n        {\r\n            method : 'POST',\r\n            headers : {\"Content-Type\" : \"application/json\"},\r\n            body : JSON.stringify(values),\r\n        }\r\n    );\r\n    const loggedIn = await loggedInResponse.json();\r\n    onSubmitProps.resetForm();\r\n\r\n    if(loggedIn) {\r\n        dispatch(\r\n            setLogin({\r\n                user : loggedIn.user,\r\n                token : loggedIn.token\r\n            })\r\n        );\r\n        navigate(\"/home\");\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = async (values, onSubmitProps) => {\r\n    if (isLogin) await login(values, onSubmitProps);\r\n    if(isRegister) await register(values,onSubmitProps);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={handleFormSubmit}\r\n      initialValues={isLogin ? initialValuesLogin : initialValuesRegister}\r\n      validationSchema={isLogin ? loginSchema : registerSchema}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        setFieldValue,\r\n        resetForm,\r\n      }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <Box\r\n            display=\"grid\"\r\n            gap=\"30px\"\r\n            gridTemplateColumns=\"repeat(4,minmax(0,1fr))\"\r\n            sx={{\r\n              \"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\r\n            }}\r\n          >\r\n            {isRegister && (\r\n              <>\r\n              <TextField\r\n                  label=\"USN\"\r\n                  onBlue={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.usn}\r\n                  name=\"usn\"\r\n                  error={\r\n                    Boolean(touched.usn) && Boolean(errors.usn)\r\n                  }\r\n                  helperText={touched.usn && errors.usn}\r\n                  sx={{ gridColumn: \"span 4\" }}\r\n                />\r\n                <TextField\r\n                  label=\"First Name\"\r\n                  onBlue={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  name=\"firstName\"\r\n                  error={\r\n                    Boolean(touched.firstName) && Boolean(errors.firstName)\r\n                  }\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  sx={{ gridColumn: \"span 2\" }}\r\n                />\r\n                <TextField\r\n                  label=\"Last Name\"\r\n                  onBlue={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  name=\"lastName\"\r\n                  error={Boolean(touched.lastName) && Boolean(errors.lastName)}\r\n                  helperText={touched.lastName && errors.lastName}\r\n                  sx={{ gridColumn: \"span 2\" }}\r\n                />\r\n                <TextField\r\n                  label=\"Branch\"\r\n                  onBlue={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.branch}\r\n                  name=\"branch\"\r\n                  error={\r\n                    Boolean(touched.branch) && Boolean(errors.branch)\r\n                  }\r\n                  helperText={touched.branch && errors.branch}\r\n                  sx={{ gridColumn: \"span 2\" }}\r\n                />\r\n                <TextField\r\n                  label=\"Sem\"\r\n                  onBlue={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.sem}\r\n                  name=\"sem\"\r\n                  error={Boolean(touched.sem) && Boolean(errors.sem)}\r\n                  helperText={touched.sem && errors.sem}\r\n                  sx={{ gridColumn: \"span 2\" }}\r\n                />\r\n                <TextField\r\n                  label=\"Phone Number\"\r\n                  onBlue={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.phoneNumber}\r\n                  name=\"phoneNumber\"\r\n                  error={\r\n                    Boolean(touched.phoneNumber) && Boolean(errors.phoneNumber)\r\n                  }\r\n                  helperText={touched.phoneNumber && errors.phoneNumber}\r\n                  sx={{ gridColumn: \"span 2\" }}\r\n                />\r\n                <TextField\r\n                  label=\"Gender\"\r\n                  onBlue={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.gender}\r\n                  name=\"gender\"\r\n                  error={\r\n                    Boolean(touched.gender) && Boolean(errors.gender)\r\n                  }\r\n                  helperText={touched.gender && errors.gender}\r\n                  sx={{ gridColumn: \"span 2\" }}\r\n                />\r\n                <Box\r\n                  gridColumn=\"span 4\"\r\n                  border={`1px solid ${palette.neutral.medium}`}\r\n                  borderRadius=\"5px\"\r\n                  p=\"1rem\"\r\n                >\r\n                  <DropZone\r\n                    acceptedFiles=\".jpg,.jpeg,.png\"\r\n                    multiple={false}\r\n                    onDrop={(acceptedFiles) =>\r\n                      setFieldValue(\"picture\", acceptedFiles[0])\r\n                    }\r\n                  >\r\n                    {({ getRootProps, getInputProps }) => (\r\n                      <Box\r\n                        {...getRootProps()}\r\n                        border={`2px dashed ${palette.primary.main}`}\r\n                        p=\"1rem\"\r\n                        sx={{ \"&:hover\": { cursor: \"pointer\" } }}\r\n                      >\r\n                        <input {...getInputProps()} />\r\n                        {!values.picture ? (\r\n                          <p>Add Picture Here</p>\r\n                        ) : (\r\n                          <FlexBetween>\r\n                            <Typography>{values.picture.name}</Typography>\r\n                            <EditOutlinedIcon />\r\n                          </FlexBetween>\r\n                        )}\r\n                      </Box>\r\n                    )}\r\n                  </DropZone>\r\n                </Box>\r\n              </>\r\n            )}\r\n            {/*This section is going to be used both for Register and login. */}\r\n            <TextField\r\n              label=\"Email\"\r\n              onBlue={handleBlur}\r\n              onChange={handleChange}\r\n              value={values.email}\r\n              name=\"email\"\r\n              error={Boolean(touched.email) && Boolean(errors.email)}\r\n              helperText={touched.email && errors.email}\r\n              sx={{ gridColumn: \"span 4\" }}\r\n            />\r\n            <TextField\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              onBlue={handleBlur}\r\n              onChange={handleChange}\r\n              value={values.password}\r\n              name=\"password\"\r\n              error={Boolean(touched.password) && Boolean(errors.email)}\r\n              helperText={touched.password && errors.password}\r\n              sx={{ gridColumn: \"span 4\" }}\r\n            />\r\n          </Box>\r\n          {/* BUTTONS */}\r\n          <Box>\r\n            <Button\r\n                fullWidth\r\n                type=\"submit\"\r\n                sx={{\r\n                    m:\"2rem 0\",\r\n                    p: \"1rem\",\r\n                    backgroundColor : palette.primary.main,\r\n                    color:palette.background.alt,\r\n                    \"&:hover\":{color:palette.primary.main},\r\n                }}\r\n            >\r\n                {isLogin ? \"LOGIN\" : \"REGISTER\"}\r\n            </Button>\r\n            <Typography\r\n                onClick={()=>{\r\n                    setPageType(isLogin?\"register\":\"login\");\r\n                    resetForm();\r\n                }}\r\n                sx={{\r\n                    textDecoration: \"underline\",\r\n                    color : palette.primary.main,\r\n                    \"&:hover\" :{\r\n                        cursor : \"pointer\",\r\n                        color : palette.primary.light,\r\n                    },              \r\n                }}\r\n            >\r\n                {isLogin ? \"Don't have an account? Sign up here.\":\"Already have an account? Login here.\"}\r\n            </Typography>\r\n          </Box>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}