{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Keerthan shetty\\\\OneDrive\\\\Desktop\\\\Mite events\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App'; //Storing the state mangagement data in local storage using redux-persisit\n\nimport authReducer from './state';\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\"; //this holds the user data even if we logout from the webpage.\n\nimport storage from \"redux-persist/lib/storage\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  version: 1\n};\nconst persistedReducer = persistReducer(persistConfig, authReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(PersistGate, {\n      loading: null,\n      persistor: persistStore(store),\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","authReducer","configureStore","Provider","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","PersistGate","persistConfig","key","version","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","root","createRoot","document","getElementById","render"],"sources":["C:/Users/Keerthan shetty/OneDrive/Desktop/Mite events/client/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n//Storing the state mangagement data in local storage using redux-persisit\nimport authReducer from './state';\nimport {configureStore} from \"@reduxjs/toolkit\";\nimport {Provider} from \"react-redux\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER\n} from \"redux-persist\";\n//this holds the user data even if we logout from the webpage.\nimport storage from \"redux-persist/lib/storage\";\nimport {PersistGate} from \"redux-persist/integration/react\";\n\nconst persistConfig = { key : \"root\", storage, version : 1};\nconst persistedReducer = persistReducer(persistConfig, authReducer);\nconst store = configureStore({\n  reducer : persistedReducer,\n  middleware : (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck : {\n        ignoredActions : [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store ={store} >\n      <PersistGate loading={null} persistor={persistStore(store)}>\n        <App/>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>\n);\n\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,SAAxB;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP,C,CAUA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAAQC,WAAR,QAA0B,iCAA1B;;AAEA,MAAMC,aAAa,GAAG;EAAEC,GAAG,EAAG,MAAR;EAAgBH,OAAhB;EAAyBI,OAAO,EAAG;AAAnC,CAAtB;AACA,MAAMC,gBAAgB,GAAGZ,cAAc,CAACS,aAAD,EAAgBb,WAAhB,CAAvC;AACA,MAAMiB,KAAK,GAAGhB,cAAc,CAAC;EAC3BiB,OAAO,EAAGF,gBADiB;EAE3BG,UAAU,EAAIC,oBAAD,IACXA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAG;MAClBC,cAAc,EAAG,CAACjB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;IADC;EADD,CAAD;AAHK,CAAD,CAA5B;AASA,MAAMa,IAAI,GAAGzB,QAAQ,CAAC0B,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL,eACE,QAAC,KAAD,CAAO,UAAP;EAAA,uBACE,QAAC,QAAD;IAAU,KAAK,EAAGV,KAAlB;IAAA,uBACE,QAAC,WAAD;MAAa,OAAO,EAAE,IAAtB;MAA4B,SAAS,EAAEd,YAAY,CAACc,KAAD,CAAnD;MAAA,uBACE,QAAC,GAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF"},"metadata":{},"sourceType":"module"}