{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ActionTypes } from './useListbox.types';\nimport areArraysEqual from '../utils/areArraysEqual';\n/**\n * Gets the current state. If the selectedValue is controlled,\n * the `value` prop is the source of truth instead of the internal state.\n */\n\nfunction getControlledState(internalState, props) {\n  if (props.value !== undefined) {\n    return _extends({}, internalState, {\n      selectedValue: props.value\n    });\n  }\n\n  return internalState;\n}\n\nfunction areOptionsEqual(option1, option2, optionComparer) {\n  if (option1 === option2) {\n    return true;\n  }\n\n  if (option1 === null || option2 === null) {\n    return false;\n  }\n\n  return optionComparer(option1, option2);\n}\n/**\n * Triggers change event handlers (onChange and onHighlightChange) when reducer returns changed state.\n *\n * @param nextState The next state returned by the reducer.\n * @param internalPreviousState The previous state. If the component is controlled, this is merged with the props to determine the final state.\n * @param propsRef The props with defaults applied.\n * @param lastActionRef The last action that was dispatched.\n */\n\n\nfunction useStateChangeDetection(nextState, internalPreviousState, propsRef, lastActionRef) {\n  React.useEffect(() => {\n    if (!propsRef.current || lastActionRef.current === null) {\n      // Detect changes only if an action has been dispatched.\n      return;\n    }\n\n    if (lastActionRef.current.type === ActionTypes.setValue || lastActionRef.current.type === ActionTypes.setHighlight) {\n      // Don't fire change events when the value has been changed externally (e.g. by changing the controlled prop).\n      return;\n    }\n\n    const previousState = getControlledState(internalPreviousState, propsRef.current);\n    const {\n      multiple,\n      optionComparer\n    } = propsRef.current;\n\n    if (multiple) {\n      var _previousState$select;\n\n      const previousSelectedValues = (_previousState$select = previousState == null ? void 0 : previousState.selectedValue) != null ? _previousState$select : [];\n      const nextSelectedValues = nextState.selectedValue;\n      const onChange = propsRef.current.onChange;\n\n      if (!areArraysEqual(nextSelectedValues, previousSelectedValues, optionComparer)) {\n        onChange == null ? void 0 : onChange(lastActionRef.current.event, nextSelectedValues);\n      }\n    } else {\n      const previousSelectedValue = previousState == null ? void 0 : previousState.selectedValue;\n      const nextSelectedValue = nextState.selectedValue;\n      const onChange = propsRef.current.onChange;\n\n      if (!areOptionsEqual(nextSelectedValue, previousSelectedValue, optionComparer)) {\n        onChange == null ? void 0 : onChange(lastActionRef.current.event, nextSelectedValue);\n      }\n    } // Fires the highlightChange event when reducer returns changed `highlightedValue`.\n\n\n    if (!areOptionsEqual(internalPreviousState.highlightedValue, nextState.highlightedValue, propsRef.current.optionComparer)) {\n      var _propsRef$current, _propsRef$current$onH;\n\n      (_propsRef$current = propsRef.current) == null ? void 0 : (_propsRef$current$onH = _propsRef$current.onHighlightChange) == null ? void 0 : _propsRef$current$onH.call(_propsRef$current, lastActionRef.current.event, nextState.highlightedValue);\n    }\n\n    lastActionRef.current = null;\n  }, [nextState.selectedValue, nextState.highlightedValue, internalPreviousState, propsRef, lastActionRef]);\n}\n/**\n * @ignore - do not document.\n */\n\n\nexport default function useControllableReducer(internalReducer, externalReducer, props) {\n  var _ref;\n\n  const {\n    value,\n    defaultValue,\n    multiple\n  } = props.current;\n  const actionRef = React.useRef(null);\n  const initialSelectedValue = (_ref = value === undefined ? defaultValue : value) != null ? _ref : multiple ? [] : null;\n  const initialState = {\n    highlightedValue: null,\n    selectedValue: initialSelectedValue\n  };\n  const combinedReducer = React.useCallback((state, action) => {\n    actionRef.current = action;\n\n    if (externalReducer) {\n      return externalReducer(getControlledState(state, action.props), action);\n    }\n\n    return internalReducer(getControlledState(state, action.props), action);\n  }, [externalReducer, internalReducer]);\n  const [nextState, dispatch] = React.useReducer(combinedReducer, initialState);\n  const dispatchWithProps = React.useCallback(action => {\n    dispatch(_extends({\n      props: props.current\n    }, action));\n  }, [dispatch, props]);\n  const previousState = React.useRef(initialState);\n  React.useEffect(() => {\n    previousState.current = nextState;\n  }, [previousState, nextState]);\n  useStateChangeDetection(nextState, previousState.current, props, actionRef);\n  return [getControlledState(nextState, props.current), dispatchWithProps];\n}","map":{"version":3,"names":["_extends","React","ActionTypes","areArraysEqual","getControlledState","internalState","props","value","undefined","selectedValue","areOptionsEqual","option1","option2","optionComparer","useStateChangeDetection","nextState","internalPreviousState","propsRef","lastActionRef","useEffect","current","type","setValue","setHighlight","previousState","multiple","_previousState$select","previousSelectedValues","nextSelectedValues","onChange","event","previousSelectedValue","nextSelectedValue","highlightedValue","_propsRef$current","_propsRef$current$onH","onHighlightChange","call","useControllableReducer","internalReducer","externalReducer","_ref","defaultValue","actionRef","useRef","initialSelectedValue","initialState","combinedReducer","useCallback","state","action","dispatch","useReducer","dispatchWithProps"],"sources":["C:/Users/Keerthan shetty/OneDrive/Desktop/Mite events/client/node_modules/@mui/base/useListbox/useControllableReducer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ActionTypes } from './useListbox.types';\nimport areArraysEqual from '../utils/areArraysEqual';\n\n/**\n * Gets the current state. If the selectedValue is controlled,\n * the `value` prop is the source of truth instead of the internal state.\n */\nfunction getControlledState(internalState, props) {\n  if (props.value !== undefined) {\n    return _extends({}, internalState, {\n      selectedValue: props.value\n    });\n  }\n  return internalState;\n}\nfunction areOptionsEqual(option1, option2, optionComparer) {\n  if (option1 === option2) {\n    return true;\n  }\n  if (option1 === null || option2 === null) {\n    return false;\n  }\n  return optionComparer(option1, option2);\n}\n\n/**\n * Triggers change event handlers (onChange and onHighlightChange) when reducer returns changed state.\n *\n * @param nextState The next state returned by the reducer.\n * @param internalPreviousState The previous state. If the component is controlled, this is merged with the props to determine the final state.\n * @param propsRef The props with defaults applied.\n * @param lastActionRef The last action that was dispatched.\n */\nfunction useStateChangeDetection(nextState, internalPreviousState, propsRef, lastActionRef) {\n  React.useEffect(() => {\n    if (!propsRef.current || lastActionRef.current === null) {\n      // Detect changes only if an action has been dispatched.\n      return;\n    }\n    if (lastActionRef.current.type === ActionTypes.setValue || lastActionRef.current.type === ActionTypes.setHighlight) {\n      // Don't fire change events when the value has been changed externally (e.g. by changing the controlled prop).\n      return;\n    }\n    const previousState = getControlledState(internalPreviousState, propsRef.current);\n    const {\n      multiple,\n      optionComparer\n    } = propsRef.current;\n    if (multiple) {\n      var _previousState$select;\n      const previousSelectedValues = (_previousState$select = previousState == null ? void 0 : previousState.selectedValue) != null ? _previousState$select : [];\n      const nextSelectedValues = nextState.selectedValue;\n      const onChange = propsRef.current.onChange;\n      if (!areArraysEqual(nextSelectedValues, previousSelectedValues, optionComparer)) {\n        onChange == null ? void 0 : onChange(lastActionRef.current.event, nextSelectedValues);\n      }\n    } else {\n      const previousSelectedValue = previousState == null ? void 0 : previousState.selectedValue;\n      const nextSelectedValue = nextState.selectedValue;\n      const onChange = propsRef.current.onChange;\n      if (!areOptionsEqual(nextSelectedValue, previousSelectedValue, optionComparer)) {\n        onChange == null ? void 0 : onChange(lastActionRef.current.event, nextSelectedValue);\n      }\n    }\n\n    // Fires the highlightChange event when reducer returns changed `highlightedValue`.\n    if (!areOptionsEqual(internalPreviousState.highlightedValue, nextState.highlightedValue, propsRef.current.optionComparer)) {\n      var _propsRef$current, _propsRef$current$onH;\n      (_propsRef$current = propsRef.current) == null ? void 0 : (_propsRef$current$onH = _propsRef$current.onHighlightChange) == null ? void 0 : _propsRef$current$onH.call(_propsRef$current, lastActionRef.current.event, nextState.highlightedValue);\n    }\n    lastActionRef.current = null;\n  }, [nextState.selectedValue, nextState.highlightedValue, internalPreviousState, propsRef, lastActionRef]);\n}\n\n/**\n * @ignore - do not document.\n */\nexport default function useControllableReducer(internalReducer, externalReducer, props) {\n  var _ref;\n  const {\n    value,\n    defaultValue,\n    multiple\n  } = props.current;\n  const actionRef = React.useRef(null);\n  const initialSelectedValue = (_ref = value === undefined ? defaultValue : value) != null ? _ref : multiple ? [] : null;\n  const initialState = {\n    highlightedValue: null,\n    selectedValue: initialSelectedValue\n  };\n  const combinedReducer = React.useCallback((state, action) => {\n    actionRef.current = action;\n    if (externalReducer) {\n      return externalReducer(getControlledState(state, action.props), action);\n    }\n    return internalReducer(getControlledState(state, action.props), action);\n  }, [externalReducer, internalReducer]);\n  const [nextState, dispatch] = React.useReducer(combinedReducer, initialState);\n  const dispatchWithProps = React.useCallback(action => {\n    dispatch(_extends({\n      props: props.current\n    }, action));\n  }, [dispatch, props]);\n  const previousState = React.useRef(initialState);\n  React.useEffect(() => {\n    previousState.current = nextState;\n  }, [previousState, nextState]);\n  useStateChangeDetection(nextState, previousState.current, props, actionRef);\n  return [getControlledState(nextState, props.current), dispatchWithProps];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}